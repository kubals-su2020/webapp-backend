version: 2
jobs:
  pr-check:
    working_directory: ~/webapp-backend
    docker:
      - image: circleci/node:13.11.0
      - image: circleci/mysql:8.0.20
        command: [--default-authentication-plugin=mysql_native_password]
        environment:
          MYSQL_ROOT_PASSWORD: test@123
          MYSQL_DATABASE: csye6225
          MYSQL_USER: user
          MYSQL_PASSWORD: passw0rd
    steps:
      - checkout
      - run:
          name: Creating test config properties file
          command: |
            touch /tmp/config.properties;
            echo db_username="root" >> /tmp/config.properties;
            echo db_password="test@123" >> /tmp/config.properties;
            echo db_hostname="localhost" >> /tmp/config.properties;
            echo db_database="csye6225" >> /tmp/config.properties;
            echo s3_bucket_name="dummy_s3_bucket_name" >> /tmp/config.properties;
            echo aws_access_key="dummy_aws_access_key" >> /tmp/config.properties;
            echo aws_secret_key="dummy_aws_secret_key" >> /tmp/config.properties;

      - run:
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 10
            done
            echo Failed waiting for MySQL && exit 1
      - run:
          name: Install node_modules with npm
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
              - ./node_modules
      - run:
          name: Compiling and running unit tests
          command: npm test
  build:
    working_directory: ~/webapp-backend
    docker:
      - image: circleci/node:13.11.0
      - image: circleci/mysql:8.0.20
        command: [--default-authentication-plugin=mysql_native_password]
        environment:
          MYSQL_ROOT_PASSWORD: test@123
          MYSQL_DATABASE: csye6225
          MYSQL_USER: user
          MYSQL_PASSWORD: passw0rd
    steps:
      - checkout
      - run:
          name: Creating test config properties file
          command: |
            touch /tmp/config.properties;
            echo db_username="root" >> /tmp/config.properties;
            echo db_password="test@123" >> /tmp/config.properties;
            echo db_hostname="localhost" >> /tmp/config.properties;
            echo db_database="csye6225" >> /tmp/config.properties;
            echo s3_bucket_name="dummy_s3_bucket_name" >> /tmp/config.properties;
            echo aws_access_key="dummy_aws_access_key" >> /tmp/config.properties;
            echo aws_secret_key="dummy_aws_secret_key" >> /tmp/config.properties;
      - run:
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 10
            done
            echo Failed waiting for MySQL && exit 1
      - run:
          name: Install node_modules with npm
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
              - ./node_modules
      - run:
          name: Install aws_cli
          command: sudo apt-get -y install awscli
      - run:
          name: Build deployment artifact
          command: zip -r ~/webapp_backend.zip .
      - run:
          name: Copy artifact to S3
          command: aws s3 cp ~/webapp_backend.zip s3://codedeploy.shalvikubal.me
      - run:
          name: Deploy code
          command: aws deploy create-deployment --application-name csye6225-webapp  --deployment-group-name csye6225-webapp-deployment --s3-location bucket=codedeploy.shalvikubal.me,bundleType=zip,key=webapp_backend.zip

workflows:
  version: 2
  pr-check:
    jobs:
      - pr-check
  build-deploy:
    jobs:
      - build
      # - build:
      #     filters:
      #       branches:
      #         only:
      #           - master
